// @flow
import React from 'react';
import { connect } from 'react-redux';
import './App.css';
import Chart from './Chart';
import { Button, Navbar, Container } from 'react-bootstrap';
import { MDBContainer } from 'mdbreact';
import { updateDays } from './action';

class App extends React.Component {

  updateRange(days) {
    if (days === 30) {
      this.props.updateDays(90);
    } else {
      this.props.updateDays(30);
    }
  }

  render() {
  return (
    <div className="App">
      <Navbar bg="light" variant="light">
        <Navbar.Brand href="#home">
          {' Malware Data'}
        </Navbar.Brand>
      </Navbar>
      <header className="App-header mt-3 mb-2">
        <Container>
          <p className="float-left mb-0">
            All Sessions
          </p>
          <Button variant="outline-dark" className="d-block float-right mt-0" onClick={() => this.updateRange(this.props.days)} size="sm">
            Last {this.props.days === 30 ? "90":"30"} Days
          </Button>
        </Container>
      </header>

      <Chart />
    </div>
  );
  }
}

//imports states from redux
const mapStateToProps = function(state){
  return {
    days: state.days
  }
}

//dispatches actions across the app
const mapDispatchToProps = function(dispatch){
  return {
    updateDays: value => dispatch(updateDays(value))
  }
}

export default connect(
  mapStateToProps,
  mapDispatchToProps
)(App);
