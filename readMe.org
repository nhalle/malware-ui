*Malware dashboard app*  -*0 mode: org -*-
#+STARTUP: indent
* Description
  + Author: Noah Halle
  + Last Update : May 24, 2019
  + UI to chart malware data selectable over a 30 or 90 day time frame. 
  + Includes downloads sessions, top applications, target industries, and top malware.
  + Updated from React frontend application to fullstack MERN (MongoDB, Express, React, Node.js) application.

* Backend
+ The backend of this project uses Node.js for the server, MongoDB for the database, and Express for routing.
** ~ Database ~
+ MongoDB: malware
+ collection: days
+ schema: daySchema
  + paramaters: days, incidents, ~malware_list~ (a list of malware events)
** files: ~/server~
+ ~/controllers~
  + ~days.js~
    + controller defines GET function that collects data
+ ~/models~
  + ~days.js~
    + defines the daySchema
  + ~db.js~
    + provides database monitoring/logging and connection
+ ~/routes~
  + ~index.js~
    + sets up the api endpoints

* Frontend
   + ~react, react-redux, react-dom, bootstrap, fontawesome, react-vis~
   + template from ~create-react-app~
** files : ~/src~
     + ~action.js~
       + sets the action types and creaters to update days listed
     + ~app.js/app.css~
       + renders the nav bar, react button and the chart 
     + ~index.js/index.css~
       + javascript file corresponding to index.html in public folder
     + ~chart.js/chart.css~
       + created charts and take state info from ~app.js~ to udpate the chart
     + folder : reducer
       + ~index.js~
         + specifies how the state changes in reponse to the actions set
     + ~classifier.json~ 
       + parameters : ~num(malware type)(1000),industry_type (10),app_type (10)~ 
       + list of the incidents of malware as defined by type
** files : ~/public
    + index.html
         + the rendered html file
   + manifest (supplied)
   + favicon (supplied)

* Other:
** package manager: ~package.json~
** ~app.js~ 
+ Server file routes the frontend and backend together
+ establishes port connection
   
* Chart notes:
   + created using react-vis
   + uses flexible plot
   + handleClick function recieves both json data files to create x,y plots, and passed to the render
   + horizontal grid: y axis uses 2 ticks
   + malware session graph uses an x axis interval of 5 days
   + ydomain is currently static  

* Other notes:
   +  For database efficiency in the future update this project could be improved by: 
      + including a classifer subschema for the classifier.json data here and updating ~malware_list~ in daySchema so that it holds a classifier object.
      + including Create, update, and delete HTTP request calls.
